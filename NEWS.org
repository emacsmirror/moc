#+title:	What's New
#+author:	Positron
#+email:	contact@positron.solutions

#+select_tags: latest
#+export_file_name: RELEASE.md
#+options: toc:nil broken-links:nil num:nil

* v0.5.0 Overlay Playback üï∂Ô∏è :latest:
In preparation for trimming, overlay support has been rearranged to perform translation and cleaning of overlays prior to first display.  By passing in serialized overlays from the interactive command, serialization and playback was more natural to support.

üöß The playback structure will likely change again after trimming support is added.
** Added
- Serialize source overlays for playback
- Clean source overlays to remove information that displays poorly in the focus buffer
** Changed
- =:beg= and =:end= are no longer keys for ~moc-focus~ playback
** Fixed
- Multi-line regions selected with leading whitespace will have the whitespace included.  (Later trimming support will remove leading whitespace that is extraneous)
* v0.4.0 Packaging üç±
This release series will make +mc+ ~moc~ ready for publishing on package archives.

‚ö†Ô∏è The package prefix has been changed to =moc=.  Hopefully this is the final choice.  It's not totally up to me.
** Added ‚ú®
- ~moc-screenshot-type~ customize option added.  Defaults to =svg=.
- ~moc-focus-base-buffer~ local variable in MoC buffers makes it easier to use buffer locals from the base buffer even when invoking MoC multiple times and otherwise losing those states
** Changed üìà
- ~moc-screenshot-path~ option was renamed to ~moc-screenshot-dir~
- ~mc-focus~ playback now uses =:plist= style keyword args.  The new keys:
  + =:invisibility-spec=
  + =:overlays=
  + =:beg=
  + =:end=
  + =:string= üöß Experimental!  Might change to =:text= or =:spans= depending on what happens with trimming
  + =:highlights=
** Fixed üë∑
- ~moc-subtle-cursor-mode~ no longer blinks from non-motion commands
* v0.3.0 A New Hope üéÑ
Nearly a complete rewrite.  After figuring out what belongs in dslide, this package has become more clearly defined.

The ~moc-focus~ command remains the focal point.  Many of the tools like setting the size, hiding the cursor, or changing faces all serve to enhance ~moc-focus~.

‚ö†Ô∏è The naming and features have undergone heavy renaming and stuff.  Don't expect anything to be exactly the same from 0.2.0.  That version was unmaintained on Github for a while as my changes were only localy evolving.
** Added ‚ú®
- ~moc-dispatch~ to control all the things
- ~moc-focus-highlight~ and ~moc-focus-un-highlight~  now support multiple highlighted spans
- ~moc-focus~ now has ~moc-focus-dispatch~ to provide a magit like help / info interface to quickly learn the MoC controls
- ~moc-focus-default-remaps~ will apply ~moc-face-remap~ presets so you don't have to manually do common remaps.  The remaps are still interactive and can be manually tweaked for edge cases.
- ~moc-focus-obscure~ now makes it possible to hide text temporarily.  This can improve certain editing workflows.
** Changed üìà
- ~moc-face-remap~ is the old org mode remapping.  This version is flexible for all situations and supports multiple preset profiles
- The variables controlling ~moc-focus~ have been renamed / revamped.  The new variables are:
  + ~moc-focus-max-width-factor~
  + ~moc-focus-max-height-factor~
  + ~moc-focus-max-area-factor~
  + ~moc-focus-max-scale~
  These controls are both more flexible and intuitive than whatever was there before.  Naming is more consistent.  Please update.  üéÖ
** Removed üí©
- Everything related specifically to org mode like hiding markup
** Fixed üë∑
- Well, a lot more was fixed than is newly broken.  0.2.0 was barely a package at all
